import pandas as pd
import requests
import os

# URL（セ・リーグ＆パ・リーグ両方記載されている）
url = "https://baseball-data.com/team/standings.html"

# ページからテーブルを取得
tables = pd.read_html(url)

# ページの全テーブル数を確認
print(f"{len(tables)} tables found")

# セ・リーグ側のテーブル構造確認
print(tables[0].columns)

# パ・リーグ側のテーブル構造確認
print(tables[1].columns)

# セ・リーグ：1つ目のテーブル、パ・リーグ：2つ目のテーブル（ページ構成に依存）
central_df = tables[0]
pacific_df = tables[1]

# 必要なカラムのみ抽出（例：チーム名と試合数）
central_df = central_df[["チーム", "試 合"]].copy()
pacific_df = pacific_df[["チーム", "試 合"]].copy()

# チーム名の英語表記（Databricksのteamカラムと揃える）を追加
team_mapping = {
    "阪神": "tigers",
    "広島": "carp",
    "DeNA": "baystars",
    "巨人": "giants",
    "中日": "dragons",
    "ヤクルト": "swallows",
    "ソフトバンク": "hawks",
    "ロッテ": "marines",
    "西武": "lions",
    "楽天": "eagles",
    "オリックス": "buffaloes",
    "日本ハム": "fighters"
}

# チーム英語名を付与
def add_english_team_name(df):
    df["team"] = df["チーム"].map(team_mapping)
    df["games"] = df["試 合"].astype(int)
    return df[["team", "games"]]

central_df = add_english_team_name(central_df)
pacific_df = add_english_team_name(pacific_df)

# 結合して1つのデータフレームに
team_games_df = pd.concat([central_df, pacific_df], ignore_index=True)

# 結果表示
print(team_games_df)

# ディレクトリが存在しない場合は作成
output_dir = "/home/ec2-user/batch/data/matches"
os.makedirs(output_dir, exist_ok=True)

# 出力パスを指定
output_path = os.path.join(output_dir, "team_games.csv")

# CSVファイルとして保存
team_games_df.to_csv(output_path, index=False, encoding="utf-8-sig")

print(f"チーム試合数データを {output_path} に保存しました。")
